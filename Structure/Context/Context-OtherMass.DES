HumMod / Context-OtherMass

Created : 2012-03-10
Revised : 2012-06-28
Author : Tom Coleman
Copyright : 2012-2012
By : University of Mississippi Medical Center

<structure><name> Context-OtherMass </name>

<variables>

<parm><name> Index </name><val> 1 </val></parm>
<parm><name> PlusMinus </name><val> 0 </val></parm>

<constant><name> MALE_SMALL     </name><val> 19.0 </val></constant>
<parm><name> MALE_NORMAL    </name><val> 26.0 </val></parm>
<constant><name> MALE_LARGE     </name><val> 32.0 </val></constant>
<constant><name> MALE_VERYLARGE </name><val> 46.0 </val></constant>

<constant><name> FEMALE_SMALL     </name><val> 15.0 </val></constant>
<constant><name> FEMALE_NORMAL    </name><val> 20.8 </val></constant>
<constant><name> FEMALE_LARGE     </name><val> 28.0 </val></constant>
<constant><name> FEMALE_VERYLARGE </name><val> 36.0 </val></constant>

<var><name> NominalMass </name></var>
<var><name> Mass </name></var>
<var><name> Mass(kG) </name></var>

<var><name> IsSmall     </name></var>
<var><name> IsNormal    </name></var>
<var><name> IsLarge     </name></var>
<var><name> IsVeryLarge </name></var>

<var><name> Stochasm </name></var>

<normaldist>
  <name> Normal </name>
  <mean> 0 </mean>
  <stddev> 25 </stddev>
</normaldist>

<whitenoise>
  <name> Flat </name>
  <lowerlim> -50 </lowerlim>
  <upperlim> 50 </upperlim>
</whitenoise>

</variables>

<definitions>

<block><name> Parms </name>

<onjustchanged><name> Index </name>
<call> Context.Calc </call>
</onjustchanged>

<onjustchanged><name> PlusMinus </name>
<call> Context.Calc </call>
</onjustchanged>

</block>

<block><name> Calc </name>

<def><name> IsSmall     </name><val> FALSE </val></def>
<def><name> IsNormal    </name><val> FALSE </val></def>
<def><name> IsLarge     </name><val> FALSE </val></def>
<def><name> IsVeryLarge </name><val> FALSE </val></def>

<if><test> Context-Gender.IsFemale </test>
  <true><call> CalcFemale </call></true>
  <false><call> CalcMale </call></false>
</if>

<call> CalcStochasm </call>

<def>
  <name> Mass(kG) </name>
  <val>
       NominalMass
     * ( 1.0 + ( PlusMinus / 100 ) )
     * ( 1.0 + ( Stochasm / 100 ) )
  </val>
</def>

<def>
  <name> Mass </name>
  <val> 1000 * Mass(kG) </val>
</def>

</block>

<block><name> CalcMale </name>

<testcase>

<case><test> Index EQ 0 </test>
<def><name> NominalMass </name><val> MALE_SMALL </val></def>
<def><name> IsSmall </name><val> TRUE </val></def>
</case>

<case><test> Index EQ 1 </test>
<def><name> NominalMass </name><val> MALE_NORMAL </val></def>
<def><name> IsNormal </name><val> TRUE </val></def>
</case>

<case><test> Index EQ 2 </test>
<def><name> NominalMass </name><val> MALE_LARGE </val></def>
<def><name> IsLarge </name><val> TRUE </val></def>
</case>

<case><test> Index EQ 3 </test>
<def><name> NominalMass </name><val> MALE_VERYLARGE </val></def>
<def><name> IsVeryLarge </name><val> TRUE </val></def>
</case>

</testcase>

</block>

<block><name> CalcFemale </name>

<testcase>

<case><test> Index EQ 0 </test>
<def><name> NominalMass </name><val> FEMALE_SMALL </val></def>
<def><name> IsSmall </name><val> TRUE </val></def>
</case>

<case><test> Index EQ 1 </test>
<def><name> NominalMass </name><val> FEMALE_NORMAL </val></def>
<def><name> IsNormal </name><val> TRUE </val></def>
</case>

<case><test> Index EQ 2 </test>
<def><name> NominalMass </name><val> FEMALE_LARGE </val></def>
<def><name> IsLarge </name><val> TRUE </val></def>
</case>

<case><test> Index EQ 3 </test>
<def><name> NominalMass </name><val> FEMALE_VERYLARGE </val></def>
<def><name> IsVeryLarge </name><val> TRUE </val></def>
</case>

</testcase>

</block>

<block><name> CalcStochasm </name>

<def>
  <name> Stochasm </name>
  <val> 0 </val>
</def>

<if>
  <test> NOT Random.Adiposity </test>
  <true>
    <exitblock/>
  </true>
</if>

<if>
  <test> Random.State EQ Random.IS_DETERMINISTIC </test>
  <true>
    <exitblock/>
  </true>
</if>

<conditional>
  <name> Stochasm </name>
  <test> Random.Distribution EQ Random.IS_NORMAL </test>
  <true> Normal </true>
  <false> Flat </false>
</conditional>

</block>

</definitions>
</structure>

End