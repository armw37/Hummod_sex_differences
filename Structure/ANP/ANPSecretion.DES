/* HumMod / ANPSecretion

   Created : 2014-02-26
   Revised : 2014-02-26
   Author : Tom Coleman
   Copyright : 2014-2014
   By : Tom Coleman
*/

<structure><name> ANPSecretion </name>

<variables>

<var><name> Rate </name></var>

<var><name> Tau </name></var>
<var><name> RightBase </name></var>
<var><name> LeftBase </name></var>

<parm><name> TauTarget </name><val> 20.0 </val></parm>

<var><name> RightRate </name></var>
<parm><name> RightBaseTarget </name><val> 0.6 </val></parm>
<var><name> RAPEffect </name></var>

<var><name> sizeModification </name></var>

<parm><name> RAP_ATarget </name><val> 10 </val></parm>10
<parm><name> RAP_mTarget</name><val> 5.7 </val></parm>5.7
<parm><name> RAP_STarget </name><val> 8  </val></parm>5.5,6

<parm><name> LAP_ATarget </name><val> 10 </val></parm>10
<parm><name> LAP_mTarget</name><val> 6 </val></parm>8
<parm><name> LAP_STarget </name><val> 16 </val></parm>13.5


<var><name> LeftRate </name></var>
<parm><name> LeftBaseTarget </name><val> 0.075 </val></parm>
<var><name> LAPEffect </name></var>

<parm><name> Clamp </name><val> FALSE </val></parm>
<parm><name> Level </name><val> 0.0 </val></parm>

<var><name> dummy </name></var>
</variables>

<equations>

<delay>
  <name> NaturalRate </name>
  <outputname> NaturalRate </outputname>
  <initialval> 44.0 </initialval>67
  <inputname> SteadyState </inputname>
  <rateconstname> K </rateconstname>
  <dervname> Derv </dervname>
  <errorlim> 0.67 </errorlim>
</delay>

<diffeq>
  <name> RAP_A </name>
  <integralname> RAP_A </integralname>
  <initialval> 10 </initialval>11
  <dervname> dRAPA </dervname>
  <errorlim> 0.3 </errorlim>
</diffeq>
<diffeq>
  <name> RAP_S </name>
  <integralname> RAP_S </integralname>
  <initialval> 7 </initialval>12.5
  <dervname> dRAPS </dervname>
  <errorlim> 0.5 </errorlim>
</diffeq>
<diffeq>
  <name> RAP_m </name>
  <integralname> RAP_m </integralname>
  <initialval> 5.7 </initialval>4.1
  <dervname> dRAPm </dervname>
  <errorlim> 0.15 </errorlim>
</diffeq>

<diffeq>
  <name> LAP_A </name>
  <integralname> LAP_A </integralname>
  <initialval> 10 </initialval>11
  <dervname> dLAPA </dervname>
  <errorlim> 0.3 </errorlim>
</diffeq>
<diffeq>
  <name> LAP_S </name>
  <integralname> LAP_S </integralname>
  <initialval> 16 </initialval>15.25
  <dervname> dLAPS </dervname>
  <errorlim> 0.5 </errorlim>
</diffeq>
<diffeq>
  <name> LAP_m </name>
  <integralname> LAP_m </integralname>
  <initialval> 8 </initialval>7
  <dervname> dLAPm </dervname>
  <errorlim> 0.15 </errorlim>
</diffeq>

</equations>

<functions>

<curve>
  <name> RAPEffect </name>
  <point><x>  0.0 </x><y>  0.0 </y><slope> 0 </slope></point>
  <point><x>  7.0 </x><y>  1.0 </y><slope> 0.4 </slope></point>
  <point><x> 20.0 </x><y> 10.0 </y><slope> 0 </slope></point>
</curve>

<curve>
  <name> LAPEffect </name>
  <point><x>  0.0 </x><y>  0.0 </y><slope> 0 </slope></point>
  <point><x> 11.0 </x><y>  1.0 </y><slope> 0.4 </slope></point>
  <point><x> 20.0 </x><y> 10.0 </y><slope> 0 </slope></point>
</curve>

</functions>

<definitions>

<block><name> Parms </name>

<def>
  <name> K </name>
  <val> INVERT TauTarget </val>
</def>

</block>

<block><name> Dervs </name>

<def><name> Tau  </name><val> TauTarget </val></def>
<def><name> dRAPA </name><val> 0.05 * ( RAP_ATarget - RAP_A ) </val></def>
<def><name> dRAPS </name><val> 0.05 * ( RAP_STarget - RAP_S ) </val></def>
<def><name> dRAPm </name><val> 0.05 * ( RAP_mTarget - RAP_m ) </val></def>
<def><name> dLAPA </name><val> 0.05 * ( LAP_ATarget - LAP_A ) </val></def>
<def><name> dLAPS </name><val> 0.05 * ( LAP_STarget - LAP_S ) </val></def>
<def><name> dLAPm </name><val> 0.05 * ( LAP_mTarget - LAP_m ) </val></def>

<def>
  <name> RightBase  </name>
  <val> sizeModification * RightBaseTarget * Sizing-OrganMass.RightHeart_Mass </val>
</def>

<def>
  <name> LeftBase  </name>
  <val> sizeModification * LeftBaseTarget * Sizing-OrganMass.LeftHeart_Mass  </val>
</def>

<!--
<def><name> RAPEffect </name><val>  RAPEffect  [ RightAtrium.TMP ] </val></def>
<def><name> LAPEffect </name><val>  LAPEffect [ LeftAtrium.TMP ] </val></def>-->

<def><name> RAPEffect </name><val>  RAP_A * ( RightAtrium.TMP ^ RAP_m ) / ( ( RAP_S ^ RAP_m ) + ( RightAtrium.TMP ^ RAP_m ) )  </val></def>
<def><name> LAPEffect </name><val>  LAP_A * ( LeftAtrium.TMP  ^ LAP_m ) / (  ( LAP_S ^ LAP_m ) + ( LeftAtrium.TMP ^ LAP_m ) ) </val></def>

<def><name> dummy </name><val> RAPEffect </val></def>



<def>
  <name> RightRate </name>
  <val> RightBase * RAPEffect </val>
</def>

<def>
  <name> LeftRate </name>
  <val> LeftBase * LAPEffect </val>
</def>

<def>
  <name> SteadyState </name>
  <val> RightRate + LeftRate </val>
</def>

<conditional>
  <name> Rate </name>
  <test> Clamp </test>
  <true> Level </true>
  <false> NaturalRate </false>
</conditional>

</block>

</definitions>
</structure>

End